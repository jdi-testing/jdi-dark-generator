buildscript {

ext {
gradleLombokVersion = '3.2.0'
}
}


plugins {
id 'java'
id 'idea'
id 'io.spring.dependency-management' version '1.0.9.RELEASE'
id "io.qameta.allure" version "2.8.1"
id "io.franzbecker.gradle-lombok" version "${gradleLombokVersion}"

}

group = 'com.epam.jdi.client'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
jcenter()
mavenCentral()
mavenLocal()
}


idea {
module {
generatedSourceDirs += file('generated-sources/java')
downloadJavadoc = true
downloadSources = true
}
}


wrapper {
distributionType = Wrapper.DistributionType.ALL
gradleVersion = "6.5.1"
}

//New gradle 6 feature. won't work with lower gradle version
java {
withJavadocJar()
withSourcesJar()
}

javadoc {
failOnError = false
options.addBooleanOption('Xdoclint:none', true)
}

ext {
swagger_annotations_version = "2.1.4"
swagger_v3_annotations_version = "2.1.4"
jackson_version = "2.10.1"
jersey_version = "1.19.4"
jodatime_version = "2.9.9"
junit_version = "5.6.0"
apache_lang_version = "3.8.1"
slf4j_version = '1.7.28'
logback_version = '1.2.3'
allure_version = '2.13.1'
dark_version = "1.1.7"
gson_version = "2.8.6"
gson_fire_version = "1.8.4"
javax_annotation_version = "1.3.2"
testng_version = "7.3.0"
}


sourceSets {
main.resources.srcDir('resources') //add new folder, preserving defaults as well
//   main.resources.srcDirs = ['src/main/resources', 'resources']  //overwrite
//generated

test.resources.srcDir('resources') //add new folder, preserving existing as well
//    test.resources.srcDirs('src/test/resources')
main.java.srcDir "generated-sources/java"

}

allure {
version = '2.13.1'  // Latest Allure Version

aspectjweaver = true
autoconfigure = true

useJUnit5 {
version = '2.13.1' // Latest Allure Version-->
}
useTestNG {
version = '2.13.1'
}
}


tasks.withType(JavaCompile) {
options.encoding = "UTF-8"
}


tasks.withType(Test) {
systemProperty "file.encoding", "UTF-8"
}

dependencies {
implementation "io.swagger.core.v3:swagger-annotations:$swagger_annotations_version"
implementation "io.swagger.core.v3:swagger-annotations:${swagger_v3_annotations_version}"

implementation "org.apache.commons:commons-lang3:${apache_lang_version}"
implementation "org.slf4j:slf4j-api:${slf4j_version}"
implementation "ch.qos.logback:logback-classic:${logback_version}"

implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"


implementation 'io.rest-assured:rest-assured'
implementation 'io.rest-assured:json-path'
implementation 'io.rest-assured:xml-path'

implementation 'io.qameta.allure:allure-rest-assured'
implementation 'io.qameta.allure:allure-assertj'

implementation "com.epam.jdi:jdi-dark:${dark_version}"

implementation "javax.annotation:javax.annotation-api:${javax_annotation_version}"

implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
//Junit
testImplementation("org.junit.jupiter:junit-jupiter:${junit_version}")

testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"
testImplementation "org.junit.jupiter:junit-jupiter-params:${junit_version}"
testImplementation "org.testng:testng:${testng_version}"

}

dependencyManagement {

dependencies {
dependencySet(group: 'io.rest-assured', version: '4.2.0') {
entry 'rest-assured'
entry 'json-path'
entry 'xml-path'
}
dependencySet(group: 'io.qameta.allure', version: '2.13.1') {
entry 'allure-rest-assured'
entry 'allure-assertj'

}

dependencySet(group: 'org.junit.jupiter', version: '5.6.0') {
entry 'junit-jupiter-api'
entry 'junit-jupiter-engine'
entry 'junit-jupiter-params'

}
}
}
